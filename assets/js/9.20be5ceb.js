(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{495:function(s,a,t){"use strict";t.r(a);var e=t(65),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"linux-bashrc-bash-profile-和-profile之间的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-bashrc-bash-profile-和-profile之间的区别"}},[s._v("#")]),s._v(" Linux .bashrc .bash_profile 和 .profile之间的区别")]),s._v(" "),t("h1",{attrs:{id:"_1-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[s._v("#")]),s._v(" 1 概述")]),s._v(" "),t("p",[s._v("bash shell使用一些启动文件去设置环境变量，这些启动文件为shell本身和系统用户确定某些bash shell配置，在本文中，我们将了解.bashrc .bash-profile 和 .profile之间的区别。")]),s._v(" "),t("h1",{attrs:{id:"_2-交互式和非交互式shell"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-交互式和非交互式shell"}},[s._v("#")]),s._v(" 2 交互式和非交互式shell")]),s._v(" "),t("h3",{attrs:{id:"bash在交互式shell中提供了两种模式选项-登录和非登录-login-and-non-login-。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bash在交互式shell中提供了两种模式选项-登录和非登录-login-and-non-login-。"}},[s._v("#")]),s._v(" Bash在交互式shell中提供了两种模式选项，登录和非登录 (login and non-login)。")]),s._v(" "),t("p",[s._v("当我们使用ssh登录到系统时，我们得到一个交互式登录的shell (interactive login shell)，这个shell在被调用时会读取启动文件。\n然而，当我们在一个已经登录的shell上调用一个新的shell时，我们得到的是一个交互式的、非登录的shell。这个shell只执行.bashrc文件")]),s._v(" "),t("p",[s._v("当shell不需要任何人类干预即可执行命令时，我们将其称为非交互式shell (non-interactive shell)。例如，当脚本生成子shell来执行命令时，子shell是非交互式shell，子shell不会执行任何启动文件，它从创建它的shell中继承了环境变量。")]),s._v(" "),t("h1",{attrs:{id:"_3-bash启动文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-bash启动文件"}},[s._v("#")]),s._v(" 3 bash启动文件")]),s._v(" "),t("p",[s._v("启动文件包含shell启动时需要执行的命令。因此，shell会自动执行这些启动文件中的命令来设置shell。这个过程发生在显示命令提示符之前。")]),s._v(" "),t("h2",{attrs:{id:"_3-1-bash-profile-的意义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-bash-profile-的意义"}},[s._v("#")]),s._v(" 3.1 "),t("em",[t("strong",[s._v(".bash_profile")])]),s._v(" 的意义")]),s._v(" "),t("p",[t("strong",[s._v(".bash_profile")]),s._v("文件包含用于设置环境变量的命令，因此shell将继承这些变量。")]),s._v(" "),t("p",[s._v("在交互式登录shell中，bash首先查找 "),t("strong",[s._v("/etc/profile")]),s._v(" 文件。如果找到，bash将在当前shell中读取并执行它。结果是 "),t("strong",[s._v("/etc/profile")]),s._v("为所有用户设置环境配置")]),s._v(" "),t("p",[s._v("类似地，bash然后检查主目录("),t("code",[s._v("cd ~")]),s._v(" 进入的目录为主目录)中是否存在 "),t("strong",[s._v(".bash_profile")]),s._v("。如果存在，则bash在当前shell中执行 "),t("strong",[s._v(".bash_profile")]),s._v("，Bash然后停止寻找其他文件，如 "),t("strong",[s._v(".bash_login")]),s._v(" 和 "),t("strong",[s._v(".profile")]),s._v("。")]),s._v(" "),t("p",[s._v("如果bash没有找到 "),t("strong",[s._v(".bash_profile")]),s._v("，那么它将按照顺序查找 "),t("strong",[s._v(".bash_login")]),s._v(" 和 "),t("strong",[s._v(".profile")]),s._v("，并只执行第一个可读的文件。")]),s._v(" "),t("p",[s._v("让我们研究一个示例 "),t("strong",[s._v(".bash_profile")]),s._v("文件。这里我们重新设置并导出PATH变量")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bash_profile execution starts.."')]),s._v("  \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/bin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bash_profile execution stops.."')]),s._v("\n")])])]),t("p",[s._v("在交互式登录shell的命令提示符之前，我们将看到下面的输出")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Bash_profile execution starts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(" \nBash_profile execution stops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("example@example ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$\n")])])]),t("h2",{attrs:{id:"_3-2-bashrc-的意义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-bashrc-的意义"}},[s._v("#")]),s._v(" 3.2 "),t("em",[t("strong",[s._v(".bashrc")])]),s._v(" 的意义")]),s._v(" "),t("p",[t("strong",[s._v(".bashrc")]),s._v("包含特定于bash shell的命令。每个交互式非登录shell首先读取 "),t("strong",[s._v(".bashrc")]),s._v("，通常，"),t("strong",[s._v(".bashrc")]),s._v("是添加别名和bash相关功能的最佳场所。")]),s._v(" "),t("p",[s._v("bash shell在主目录中查找 "),t("strong",[s._v(".bashrc")]),s._v("文件，并使用"),t("code",[s._v("source")]),s._v("在当前shell中执行它。")]),s._v(" "),t("p",[s._v("让我们通过样例认识 "),t("strong",[s._v(".bashrc")]),s._v("文件")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bashrc execution starts.."')]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("elui")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'top -c -u $USER'")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ll")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ls -lrt'")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bashrc execution stops.."')]),s._v("\n")])])]),t("p",[s._v("在交互式非登录shell的命令提示符之前，我们将看到下面的输出")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("example@example ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\nBashrc execution starts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(" \nBashrc execution stops"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("example@example ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$\n")])])]),t("h2",{attrs:{id:"_3-2-profile-的意义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-profile-的意义"}},[s._v("#")]),s._v(" 3.2 "),t("em",[t("strong",[s._v(".profile")])]),s._v(" 的意义")]),s._v(" "),t("p",[s._v("在交互式shell登录过程中，如果在主目录中不存在 "),t("strong",[s._v(".bash_profile")]),s._v("，则bash寻找 "),t("strong",[s._v(".bash_login")]),s._v("，如果发现**.bash_login** 则bash执行它。如果 "),t("strong",[s._v(".bash_login")]),s._v(" 不存在主目录中，则bash寻找 "),t("strong",[s._v(".profile")]),s._v(" 并执行它。")]),s._v(" "),t("p",[t("strong",[s._v(".profile")]),s._v(" 可以保持与 "),t("strong",[s._v(".bash_profile")]),s._v(" 或 "),t("strong",[s._v(".bash_login")]),s._v(" 的配置。它控制着出现的提示，键盘声音，要打开的 shell 以及覆盖 "),t("code",[s._v("/etc/profile")]),s._v("文件中设置的变量的单个配置文件设置。")]),s._v(" "),t("h1",{attrs:{id:"_4-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-区别"}},[s._v("#")]),s._v(" 4 区别")]),s._v(" "),t("p",[s._v("在每次交互登录时，bash shell都会执行 "),t("strong",[s._v(".bash_profile")]),s._v("。如果在主目录中找不到 "),t("strong",[s._v(".bash_profile")]),s._v("，bash将执行从 "),t("strong",[s._v(".bash_login")]),s._v(" 和 "),t("strong",[s._v(".profile")]),s._v(" 中找到的第一个可读文件。但是，在每次交互式非登录shell启动时，bash都会 "),t("strong",[s._v(".bashrc")]),s._v("。")]),s._v(" "),t("p",[s._v("通常情况下，环境变量会被放入 "),t("strong",[s._v(".bash_profile")]),s._v("。由于交互式登录shell是第一个shell，因此环境设置所需的所有默认设置都被放入**.bash_profile**。因此，它们只设置一次而且在所有子shell中继承。")]),s._v(" "),t("p",[s._v("同样地，别名和函数也会被放入 "),t("strong",[s._v(".bashrc")]),s._v(" 确保每次从现有环境中启动shell时都加载这些")]),s._v(" "),t("p",[s._v("然而，为了避免登录和非登录交互shell设置的差异。"),t("strong",[s._v(".bash_profile")]),s._v(" 调用 "),t("strong",[s._v(".bashrc")]),s._v("。因此，我们将看到下面的代码片段被插入**.bash_profile**，以便在每个交互式登录shell上 "),t("strong",[s._v(".bashrc")]),s._v(" 也在同样shell执行：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f ~/.bashrc "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("  ~/.bashrc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/bin "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("\n")])])]),t("h1",{attrs:{id:"_5-结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-结论"}},[s._v("#")]),s._v(" 5 结论")]),s._v(" "),t("p",[s._v("总而言之，在使用环境之前，shell需要其启动文件以配置shell环境。")]),s._v(" "),t("p",[s._v("在本文中，我们检查了各种shell模式。然后，我们了解了各种bash启动文件的重要性。最后，我们检查了这些启动文件之间的差异。")]),s._v(" "),t("p",[s._v("翻译来自"),t("a",{attrs:{href:"https://www.baeldung.com/linux/bashrc-vs-bash-profile-vs-profile",target:"_blank",rel:"noopener noreferrer"}},[s._v("bashrc-vs-bash-profile-vs-profile"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);